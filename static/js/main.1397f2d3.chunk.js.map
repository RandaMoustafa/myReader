{"version":3,"sources":["component/search.js","component/book.js","component/shelf.js","BooksAPI.js","views/home.js","views/searchPage.js","App.js","index.js"],"names":["Search","react_default","a","createElement","className","react_router_dom","to","Component","Book","_this","this","style","width","height","backgroundImage","concat","props","books","imageLinks","thumbnail","value","shelf","onChange","e","updatedBook","target","disabled","title","authors","Shelf","name","map","key","component_book","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","book","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","Home","state","BookAPI","setState","s","filter","b","_this2","console","log","component_shelf","component_search","SearchPage","query","results","updateQuery","searchHandler","_this3","undefined","trim","error","forEach","f","_this4","type","placeholder","proptypes","PropTypes","func","isRequired","BooksApp","showSearchPage","react_router","exact","path","render","home","searchPage","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1397f2d3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Search extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"open-search\">\r\n            <Link to='/search' className=\"add-button\">Add a book</Link>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Book extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n            <li>\r\n    <div className=\"book\">\r\n    <div className=\"book-top\">\r\n        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${this.props.books.imageLinks && this.props.books.imageLinks.thumbnail}\")` }}></div>\r\n        <div className=\"book-shelf-changer\" >\r\n        <select value={this.props.books.shelf} onChange={(e)=>{this.props.updatedBook(this.props.books , e.target.value)}}>\r\n            <option value=\"move\" disabled>Move to...</option>\r\n            <option value=\"currentlyReading\">Currently Reading</option>\r\n            <option value=\"wantToRead\">Want to Read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n        </select>\r\n        </div>\r\n    </div>\r\n    <div className=\"book-title\">{this.props.books.title}</div>\r\n    <div className=\"book-authors\">{this.props.books.authors && this.props.books.authors[0]}</div>\r\n    </div>\r\n</li>\r\n\r\n</div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nBook.propTypes ={\r\n    books : PropTypes.object.isRequired,\r\n    updatedBook : PropTypes.func.isRequired,\r\n    thumbnail: PropTypes.string,\r\n    authors: PropTypes.array,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string\r\n}\r\n\r\nexport default Book;","import React, { Component } from \"react\";\r\nimport Book from \"./book\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Shelf extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{this.props.name}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {\r\n                        this.props.books.map((books , key)=>\r\n                        <Book updatedBook ={this.props.updatedBook} books={books} key={key}/>)\r\n                    }\r\n                </ol>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nShelf.propTypes = {\r\n    updatedBook: PropTypes.func.isRequired,\r\n    books: PropTypes.array.isRequired,\r\n    name : PropTypes.string.isRequired\r\n}\r\nexport default Shelf;","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\r\nimport Search from \"../component/search\";\r\nimport Shelf from \"../component/shelf\";\r\nimport * as BookAPI from '../BooksAPI'; \r\n\r\nclass Home extends Component{\r\n    state = {\r\n        books : [],\r\n    };\r\n    componentDidMount(){\r\n        BookAPI.getAll().then((books)=>{\r\n            this.setState({books : books});\r\n            console.log(books);\r\n        })\r\n    }\r\n    updatedBook =(book , shelf)=>{\r\n        BookAPI.update(book , shelf).then(res =>{\r\n            book.shelf = shelf;\r\n            this.setState(s => ({\r\n                books : s.books.filter(b=> b.id !== book.id).concat([book])\r\n            }));\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n                </div>\r\n            <div className=\"list-books-content\">\r\n                \r\n                <Shelf updatedBook ={this.updatedBook} name=\"currently Reading\" books={this.state.books.filter(b => b.shelf === \"currentlyReading\")}/>\r\n                <Shelf updatedBook ={this.updatedBook} name=\"want To Read\" books={this.state.books.filter(b => b.shelf === \"wantToRead\")}/>\r\n                <Shelf updatedBook ={this.updatedBook} name=\"Read\" books={this.state.books.filter(b => b.shelf === \"read\")}/>             \r\n            </div>\r\n            <Search/>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BookAPI from '../BooksAPI';\r\nimport Book from \"../component/book\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass SearchPage extends Component{\r\n    state = {\r\n        books: [],\r\n        query : \"\",\r\n        results : []\r\n    }\r\n    componentDidMount(){\r\n        BookAPI.getAll().then((books)=>{\r\n            this.setState({books : books});\r\n        })\r\n            }\r\n\r\n            updateQuery = (query)=>{\r\n                this.setState({\r\n                    query : query\r\n                } ,\r\n                    this.searchHandler);\r\n            }\r\n            searchHandler(){\r\n                if(this.state.query === '' || this.state.query === undefined){\r\n                    return this.setState({results: []});\r\n                }\r\n                BookAPI.search(this.state.query.trim())\r\n                .then(res=> {\r\n                    if(res.error){\r\n                        return this.setState({results: []})\r\n                    }else{\r\n                        res.forEach(b=>{\r\n                            let f = this.state.books.filter(book=> book.id === b.id);\r\n                            if(f[0]){\r\n                                b.shelf = f.shelf;\r\n                            }\r\n                            return this.setState({results: res});\r\n                        });\r\n                    }\r\n\r\n\r\n                }\r\n                \r\n                )\r\n            }\r\n    updatedBook =(book , shelf)=>{\r\n        BookAPI.update(book , shelf).then(res =>{\r\n            book.shelf = shelf;\r\n            this.setState(s => ({\r\n                books : s.books.filter(b=> b.id !== book.id).concat([book])\r\n            }));\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link to='/' className=\"close-search\" >Close</Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query}\r\n                onChange={(e)=> {this.updateQuery(e.target.value)}}/>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                    {this.state.results.map((books , key) => <Book updatedBook ={this.updatedBook} books={books} key={key} />)}\r\n                </ol>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSearchPage.proptypes ={\r\n    updatedBook: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default SearchPage;","import React from 'react'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Switch, Route } from 'react-router';\nimport Home from './views/home';\nimport SearchPage from './views/searchPage';\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false\n  }\n \n\n  render() {\n    return (\n      <div className=\"app\">\n        {/* Make a Rout with React Router */}\n        <Switch>\n          <Route exact path='/' render={()=>(<Home/>)} />\n          <Route path='/search' render={()=>(<SearchPage/>)}/>\n          </Switch>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>,\n<App />,\n</BrowserRouter>,\n document.getElementById('root'));\n"],"sourceRoot":""}